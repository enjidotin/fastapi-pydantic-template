name: Lint and Test

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install uv
        run: pip install uv

      - name: Install dependencies
        run: |
          uv pip install --system -r requirements.txt
          uv pip install --system flake8 black isort mypy pytest-cov bandit ruff

      - name: Lint with Ruff
        run: |
          ruff check .

      - name: Check formatting with Black
        run: |
          black --check .

      - name: Check imports with isort
        run: |
          isort --check-only --profile black .

      - name: Type checking with mypy
        run: |
          mypy app

      - name: Security check with bandit
        run: |
          bandit -r app -c pyproject.toml

      - name: Run tests with pytest
        env:
          DATABASE_URL: postgresql+asyncpg://postgres:postgres@localhost:5432/test_db
          APP_ENV: testing
          ALLOWED_HOSTS: '["localhost", "127.0.0.1"]'
        run: |
          pytest --cov=app --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
